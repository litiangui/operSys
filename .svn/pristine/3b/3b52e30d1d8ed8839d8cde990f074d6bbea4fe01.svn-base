package com.shq.oper.test;

import java.time.LocalDateTime;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

import org.junit.Test;
import org.junit.runner.RunWith;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.boot.test.context.SpringBootTest;
import org.springframework.data.mongodb.core.query.Query;
import org.springframework.test.context.junit4.SpringRunner;

import com.github.pagehelper.PageInfo;
import com.shq.oper.dao.MongoDao;
import com.shq.oper.dao.mongo.AdminActionLogMongo;
import com.shq.oper.dao.mongo.ApiRequestDataLogMongo;
import com.shq.oper.model.domain.mongo.AdminActionLog;
import com.shq.oper.model.dto.PageDto;
import com.shq.oper.util.JsonUtils;

import lombok.extern.slf4j.Slf4j;

@RunWith(SpringRunner.class)
@SpringBootTest
@Slf4j
public class MongoDBTests {

	@Autowired
	private ApiRequestDataLogMongo apiRequestDataLogMongo;
	@Autowired
	private AdminActionLogMongo adminActionLogMongo;
	

	@Test
	public void testSaveMopngo() {
		
		Map<String,String> parMap = new HashMap<>();
		parMap.put("code_01", "value01");
		parMap.put("code_02", "value02");
		AdminActionLog adminActionLog = new AdminActionLog();
		adminActionLog.setAction("/index000");
		adminActionLog.setRefAction("ref000");
		adminActionLog.setAdminId(1L);
		adminActionLog.setCreateTime(LocalDateTime.now());
		adminActionLog.setIp("0.0.0.0.1");
		adminActionLog.setActionPara(JsonUtils.toDefaultJson(parMap));
		log.debug("adminActionLog====="+JsonUtils.toDefaultJson(adminActionLog));
		
		adminActionLogMongo.insert(adminActionLog);
		
		log.info("=========================");
	}
	
	@Test
	public void testMopngoPage() {
		AdminActionLog adminActionLog = new AdminActionLog();
		adminActionLog.setCreateTime(null);
//		adminActionLog.setRefAction("ref222");
//		Query query = new Query();
//		query.addCriteria(Criteria.where("admin_id").is(1L));
//		query.addCriteria(Criteria.where("ref_action").is("333"));
		PageInfo<AdminActionLog> pageData = adminActionLogMongo.findByEntity(adminActionLog, new PageDto(1,3));
		log.debug("adminActionLog====="+JsonUtils.toDefaultJson(pageData));
		log.debug("adminActionLog====="+JsonUtils.toDefaultJson(pageData.getList()));
		
		
		log.info("=========================");
	}
	@Test
	public void testRemove() {
		
		//adminActionLog.setAdminId(1L);
		Query query = new Query();
//		query.addCriteria(Criteria.where("admin_id").is(1L));
		List<AdminActionLog> list = adminActionLogMongo.remove(query, AdminActionLog.class);
		
		log.debug("testRemove====="+JsonUtils.toDefaultJson(list));
		log.debug("testRemove==Num==="+list.size());
	}


}